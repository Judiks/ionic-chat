{"version":3,"sources":["./src/app/chat/components/contacts/components/contact-dashboard/contact-dashboard.component.ts","./src/app/chat/components/contacts/components/contact-dashboard/contact-dashboard.component.html","./src/app/chat/components/contacts/contacts-routing.module.ts","./src/app/chat/components/contacts/contacts.module.ts","./src/app/chat/components/contacts/components/contact-dashboard/contact-dashboard.component.scss","./src/app/chat/components/contacts/contacts.component.ts"],"names":[],"mappings":"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","file":"components-contacts-contacts-module-es2015.js","sourcesContent":["import { ApplicationRef, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContactFindOptions } from '@ionic-native/contacts/ngx';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { NavController } from '@ionic/angular';\nimport { BaseComponent } from 'src/app/shared/base.component';\nimport { AuthHelper } from 'src/app/shared/helpers/auth.helper';\nimport { RoomHelper } from 'src/app/shared/helpers/room.helper';\nimport {\n  AddressRequest,\n  AddressType,\n  ContactDataAddressesRequest,\n  ContactDataImagesRequest,\n  ContactDataOrganizationsRequest,\n  ContactDataPhoneNumbersRequest,\n  ContactDataRequest,\n  ContactDataUrlsRequest,\n  ContactResponse,\n  CreateRoomFromContactRequest,\n  GetContactDataRequest,\n  GetRoomByContactRequest,\n  ImageRequest,\n  OrganizationRequest,\n  PhoneNumberRequest,\n  RoomResponse,\n  SyncContactRequest,\n  SyncContactResponse,\n  UrlRequest\n} from 'src/swagger/models';\nimport { ContactService, RoomService } from 'src/swagger/services';\n\n@Component({\n  selector: 'app-contact-dashboard',\n  templateUrl: './contact-dashboard.component.html',\n  styleUrls: ['./contact-dashboard.component.scss'],\n})\nexport class ContactDashboardComponent extends BaseComponent implements OnInit {\n\n  public contacts: ContactResponse[];\n\n  constructor(\n    public keyboard: Keyboard, public AppR: ApplicationRef, public router: Router,\n    private contactService: ContactService, private authHelper: AuthHelper,\n    public navController: NavController, private roomService: RoomService,\n    public roomHelper: RoomHelper\n  ) {\n    super(keyboard, AppR, router, navController);\n    this.contacts = new Array<ContactResponse>();\n  }\n\n  ngOnInit() {\n    this.initData();\n  }\n\n  public initData() {\n    this.colors = new Array<string>();\n    if (this.contacts.length === 0) {\n      this.getContactsData(null);\n    }\n\n  }\n\n  public getContactsData(event) {\n    const request = {\n      skipCount: this.contacts.length,\n      userId: this.authHelper.getUser().id\n    } as GetContactDataRequest;\n\n    this.contactService.ContactGetContactData(request).subscribe((result: ContactResponse[]) => {\n      console.log(result);\n      this.contacts = [...this.contacts, ...result];\n      this.contacts.forEach(x => {\n        this.colors.push(this.getRandomColor());\n      });\n      if (event) {\n        event.target.complete();\n      }\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  public syncContacts() {\n    if (this.contacts.length > 0) {\n      return;\n    }\n    const options = {\n      filter: '',\n      multiple: true,\n      desiredFields: [],\n      hasPhoneNumber: true\n    } as ContactFindOptions;\n    (navigator as any).contacts.find(['*'],\n      (contacts) => {\n        console.log(contacts);\n        const contactsRequest = this.mapContacts(contacts);\n        this.contactService.ContactSaveAllFromNative(contactsRequest).subscribe((result: SyncContactResponse[]) => {\n          this.contacts = result;\n        },\n          err => {\n            console.log(err);\n          });\n      },\n      err => console.log(err), options);\n  }\n\n  private mapContacts(contacts): Array<SyncContactRequest> {\n    const contactsRequest = new Array<SyncContactRequest>();\n    if (contacts) {\n      contacts.forEach(contact => {\n        const contactRequest = {\n          userId: this.authHelper.getUser().id,\n          contactData: this.mapContactData(contact),\n        } as SyncContactRequest;\n        contactsRequest.push(contactRequest);\n      });\n    }\n    return contactsRequest;\n  }\n\n  private mapContactData(contact): ContactDataRequest {\n    const contactData = {\n      displayName: contact.displayName,\n      firstName: contact.name.givenName,\n      lastName: contact.name.familyName,\n      middleName: contact.name.middleName,\n      honorificPrefix: contact.name.honorificPrefix,\n      honorificSuffix: contact.name.honorificSuffix,\n      addresses: this.mapAddresses(contact),\n      images: this.mapImages(contact),\n      organizations: this.mapOrganizations(contact),\n      phoneNumbers: this.mapPhoneNumbers(contact),\n      urls: this.mapUrls(contact)\n    } as ContactDataRequest;\n    return contactData;\n  }\n\n  private mapAddresses(contact): ContactDataAddressesRequest[] {\n    const contactAddresses = new Array<ContactDataAddressesRequest>();\n    if (contact.addresses) {\n      contact.addresses.forEach(address => {\n        const addressRequest = {\n          address: {\n            deviceName: address.streetAddress,\n            type: 0 as AddressType\n          } as AddressRequest\n        } as ContactDataAddressesRequest;\n        contactAddresses.push(addressRequest);\n      });\n    }\n    return contactAddresses;\n  }\n\n  private mapImages(contact): ContactDataImagesRequest[] {\n    const contactImages = new Array<ContactDataImagesRequest>();\n    if (contact.photos) {\n      contact.photos.forEach(image => {\n        const imageRequest = {\n          image: {\n            deviceUrl: {\n              path: image.value,\n              type: 3\n            } as UrlRequest,\n            isMain: true,\n            type: 0\n          } as ImageRequest\n        } as ContactDataImagesRequest;\n        contactImages.push(imageRequest);\n      });\n    }\n    return contactImages;\n  }\n\n  private mapOrganizations(contact): ContactDataOrganizationsRequest[] {\n    const contactOrganizations = new Array<ContactDataOrganizationsRequest>();\n    if (contact.organizations) {\n      contact.organizations.forEach(organization => {\n        const organizationRequest = {\n          organization: {\n            name: organization.name,\n            position: organization.title\n          } as OrganizationRequest\n        } as ContactDataOrganizationsRequest;\n        contactOrganizations.push(organizationRequest);\n      });\n    }\n    return contactOrganizations;\n  }\n\n  private mapPhoneNumbers(contact): ContactDataPhoneNumbersRequest[] {\n    const contactPhoneNumbers = new Array<ContactDataPhoneNumbersRequest>();\n    if (contact.phoneNumbers) {\n      contact.phoneNumbers.forEach(phoneNumber => {\n        const phoneNumberRequest = {\n          phoneNumber: {\n            number: phoneNumber.value\n          } as PhoneNumberRequest\n        } as ContactDataPhoneNumbersRequest;\n        contactPhoneNumbers.push(phoneNumberRequest);\n      });\n    }\n    return contactPhoneNumbers;\n  }\n\n  private mapUrls(contact): ContactDataUrlsRequest[] {\n    const contactUrls = new Array<ContactDataUrlsRequest>();\n    if (contact.urls) {\n      contact.urls.forEach(url => {\n        const urlRequest = {\n          url: {\n            path: url.value,\n            type: 0\n          } as UrlRequest\n        } as ContactDataUrlsRequest;\n        contactUrls.push(urlRequest);\n      });\n    }\n    return contactUrls;\n  }\n\n  getPhonetic(contact: ContactResponse): string {\n    let result = '';\n    if (contact.contactData?.firstName) {\n      result += contact.contactData?.firstName.charAt(0);\n    }\n    if (contact.contactData?.lastName) {\n      result += contact.contactData?.lastName.charAt(0);\n    }\n    if (result.length < 2 && contact.contactData?.middleName) {\n      result += contact.contactData?.middleName.charAt(0);\n    }\n    if (result.length < 1 && contact.contactData?.displayName) {\n      result += contact.contactData?.displayName.charAt(0);\n    }\n    return result;\n  }\n\n  joinContactRoom(contact: ContactResponse) {\n    const request = { contactId: contact.id } as GetRoomByContactRequest;\n    this.roomService.RoomGetRoomByContact(request).subscribe((response: RoomResponse) => {\n      const createRequest = JSON.parse(JSON.stringify({ contact })) as CreateRoomFromContactRequest;\n      if (!response) {\n        this.roomService.RoomCreateFromContact(createRequest).subscribe((response2: RoomResponse) => {\n          this.roomHelper.setRoom(response2);\n          this.redirectToRoom();\n        });\n      } else {\n        this.roomHelper.setRoom(response);\n        this.redirectToRoom();\n      }\n    });\n\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title class=\\\"app-header\\\">Contacts</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div *ngIf='contacts.length == 0' class=\\\"h-100 d-flex\\\">\\n    <div class=\\\"text-center justify-content-center m-auto\\\">\\n      <ion-img class=' m-auto w-75 h-75 not-have-img' src='assets/img/icons-contacts.png'></ion-img>\\n      <ion-label class=\\\"luckiest-guy-font not-have-label\\\">You may not have contacts yet.</ion-label>\\n      <p class='warning-description'>Do you want to sync them from your device?</p>\\n      <ion-button (click)='syncContacts()'>Sync device contact</ion-button>\\n    </div>\\n  </div>\\n  <div *ngIf='contacts.length > 0'>\\n    <div *ngFor=\\\"let contact of contacts; index as i\\\">\\n      <div class=\\\"item-item\\\">\\n        <div class='d-flex'>\\n          <div class='d-flex w-25 item-container-img'>\\n            <ion-img *ngIf='contact.contactData?.images[0]?.image?.deviceUrl.path' class=\\\"w-75 h-75 m-auto item-img\\\"\\n              [src]='sanitizeImage(contact.contactData?.images[0]?.image?.deviceUrl.path)'></ion-img>\\n            <div *ngIf='!contact.contactData?.images[0]?.image?.deviceUrl.path'\\n              class=\\\"w-75 h-75 m-auto item-container-img\\\">\\n              <div class=\\\"d-flex w-100 h-100 item-img\\\" [ngStyle]=\\\"{'background-color': colors[i] }\\\">\\n                <div class='item-phonetic'>\\n                  {{ getPhonetic(contact) }}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class='w-75 item-data' (click)='joinContactRoom(contact)'>\\n            <div class='item-name'>\\n              {{ contact.contactData.displayName }}\\n            </div>\\n            <div class='item-last-message'>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"getContactsData($event)\\\">\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ContactDashboardComponent } from './components/contact-dashboard/contact-dashboard.component';\r\nimport { ContactsComponent } from './contacts.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'dashboard',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '',\r\n    component: ContactsComponent,\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        component: ContactDashboardComponent\r\n      },\r\n      // {\r\n      //   path: 'new',\r\n      //   component: RoomCreatingComponent\r\n      // },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContactsRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ContactDashboardComponent } from './components/contact-dashboard/contact-dashboard.component';\r\nimport { ContactsRoutingModule } from './contacts-routing.module';\r\nimport { ContactsComponent } from './contacts.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContactsComponent,\r\n    ContactDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule.forRoot(),\r\n    ContactsRoutingModule\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class ContactsModule { }\r\n","export default \".not-have-label {\\n  color: lightsalmon;\\n}\\n\\n@media (min-width: 500px) {\\n  .not-have-img {\\n    display: none;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9jb21wb25lbnRzL2NvbnRhY3RzL2NvbXBvbmVudHMvY29udGFjdC1kYXNoYm9hcmQvY29udGFjdC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7RUFDSTtJQUNJLGFBQWE7RUFDbkI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY29tcG9uZW50cy9jb250YWN0cy9jb21wb25lbnRzL2NvbnRhY3QtZGFzaGJvYXJkL2NvbnRhY3QtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdC1oYXZlLWxhYmVsIHtcclxuICAgIGNvbG9yOiBsaWdodHNhbG1vbjtcclxufVxyXG5cclxuQG1lZGlhKG1pbi13aWR0aDogNTAwcHgpIHsgXHJcbiAgICAubm90LWhhdmUtaW1nIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  template: `<ion-router-outlet ></ion-router-outlet>`\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}